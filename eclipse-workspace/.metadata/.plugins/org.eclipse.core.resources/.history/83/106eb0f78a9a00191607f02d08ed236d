package class1;

import java.util.Scanner;

public class addition_of_two_linked_list {

	 
	   public static Node addTwoNumbers(Node first, Node second) { 
	        Node res = null; // res is head node of the resultant list 
	        Node prev = null; 
	        Node temp = null; 
	        int carry = 0, sum; 
	  
	        while (first != null || second != null) //while both lists exist 
	        { 
	            // Calculate value of next digit in resultant list. 
	            // The next digit is sum of following things 
	            // (i)  Carry 
	            // (ii) Next digit of first list (if there is a next digit) 
	            // (ii) Next digit of second list (if there is a next digit) 
	            sum = carry + (first != null ? first.data : 0) 
	                    + (second != null ? second.data : 0); 
	  
	            // update carry for next calulation 
	            carry = (sum >= 10) ? 1 : 0; 
	  
	            // update sum if it is greater than 10 
	            sum = sum % 10; 
	  
	            // Create a new node with sum as data 
	            temp = new Node(sum,null); 
	  
	            // if this is the first node then set it as head of 
	            // the resultant list 
	            if (res == null) { 
	                res = temp; 
	            } else // If this is not the first node then connect it to the rest. 
	            { 
	                prev.next = temp; 
	            } 
	  
	            // Set prev for next insertion 
	            prev = temp; 
	  
	            // Move first and second pointers to next nodes 
	            if (first != null) { 
	                first = first.next; 
	            } 
	            if (second != null) { 
	                second = second.next; 
	            } 
	        } 
	  
	        if (carry > 0) { 
	            temp.next = new Node(carry,null); 
	        } 
	  
	        // return head of the resultant list 
	        return res; 
	    } 
	     
	     // -----------------------------------------------------
	 
	     static Node head1;
	 
	     static Node head2;
	 
	     static Node head3;
	 
	     public static void main(String[] args) {
	         Scanner sc = new Scanner(System.in);
	         int n1 = sc.nextInt();
	         int a1 = sc.nextInt();
	 
	         Node tail;
	         head1 = tail = insert(null, a1);
	 
	         for (int i = 1; i < n1; i++) {
	             int a = sc.nextInt();
	             tail = insert(tail, a);
	         }
	 
	         int n2 = sc.nextInt();
	         int a2 = sc.nextInt();
	 
	         head2 = tail = insert(null, a2);
	 
	         for (int i = 1; i < n2; i++) {
	             int a = sc.nextInt();
	             tail = insert(tail, a);
	         }
	 
	         head3 = addTwoNumbers(head1, head2);
	         display(head3);
	 
	     }
	 
	     // Class declaration for a Node of the Linked List
	     private static class Node {
	         int data;
	         Node next;
	 
	         public Node(int data, Node next) {
	             this.data = data;
	             this.next = next;
	         }
	         public Node()
	         {
	        	 
	         }
	     }
	 
	     /*
	      * Input Parameters: tail: head of the linked list in which a new node is to
	      * be inserted. data: the data value of the node which is to be inserted.
	      * 
	      * Return Value: tail of the linked list/the node that is inserted
	      */
	     public static Node insert(Node tail, int data) {
	 
	         if (tail == null) {
	             return new Node(data, null);
	         }
	 
	         Node nn = new Node(data, null);
	         tail.next = nn;
	         return nn;
	     }
	 
	     /*
	      * Input Parameters: head: head of the linked list in which is to be
	      * displayed.
	      * 
	      * Return Value: null
	      */
	     public static void display(Node head) {
	         for (Node node = head; node != null; node = node.next) {
	             System.out.print(node.data + " ");
	         }
	         System.out.println();
	     }
	 
}
