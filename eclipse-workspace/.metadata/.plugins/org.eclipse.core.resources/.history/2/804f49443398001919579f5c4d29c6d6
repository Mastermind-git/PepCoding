package HashMapHeap2;

import java.util.*;

public class equivalent_sub_arrays {

	 public static void main(String[] args) {
 	 	 // TODO Auto-generated method stub
 	 	 Scanner scn=new Scanner(System.in);
 	 	 	 int n=scn.nextInt();
 	 	 	 int []arr=new int[n];
 	 	 	 for(int  i=0;i<n;i++){
 	 	 	 	 arr[i]=scn.nextInt();
 	 	 	 }
 System.out.println(val(arr));
 	 }
 
     // -----------------------------------------------------
 	 // This is a functional problem. Only this function has to be written.
 	 // This function takes as input an array
 	 // It should return an integer value.
 	 public static int val(int[] arr) {
 //Write your code here
 		 HashMap<Integer, Integer> hm = new HashMap<Integer, Integer>();
 		 HashSet<Integer> hs = new HashSet<Integer>();
 		 int count = 0;
 		 for(int i=0;i<arr.length;i++)
 		 {
 			 hs.add(arr[i]);
 		 }
 		 for(int i=0,j=0;i<arr.length;)
 		 {
 			 while(hs.size()!=hm.size()&&j<arr.length)
 			 {
 				 int freq = hm.getOrDefault(arr[j], 0);
 				 hm.put(arr[j], freq+1);
 				 j++;
 			 }
 			 while(hs.size()==hm.size()&&i<arr.length)
 			 {
 				 count++;
 				 int freq = hm.get(arr[i]);
 				 if(freq == 1)
 					 hm.remove(arr[i]);
 				 else
 					 hm.put(arr[i], freq-1);
 				 i++;
 			 }
 		 }
 		 return count;
 	 }
}
